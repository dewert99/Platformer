import fisica.*; //<>//

int size = 25;

FWorld world;

PImage map;
PImage stone, brick, ice, mario, goomba, qblock;

boolean rightDown, leftDown;

ArrayList<FBody> oddBodies;
ArrayList<FBox> enemies;

boolean grounded = false;
boolean icy = false;

FBox player;

void setup() {
  fullScreen(FX2D);


  map = loadImage ("map6.png");
  stone = loadImage("stone.png");
  brick = loadImage("brick.png");
  ice = loadImage("ice.png");
  mario = loadImage("mario.png");
  goomba = loadImage("Goomba.png");
  qblock = loadImage("qblock.png");

  Fisica.init(this);
  world = new FWorld(0, 0, map.width * size, map.height * size);
  world.setGravity(0, 900);

  oddBodies = new ArrayList<FBody>(100);
  enemies = new ArrayList<FBox>(100);

  rightDown = leftDown = false;

  for (int y=0; y<map.height; y++) {
    for (int x=0; x<map.width; x++) {
      color c = map.get(x, y);
      if (c == color(0)) {
        makeStone(x*size, y*size);
      }
      if (c == color(255, 0, 0)) {
        makeBrick(x*size, y*size);
      }
      if (c == color(0, 255, 255)) {
        makeIce(x*size, y*size);
      }
      if (c == color(127, 0, 0)) {
        makeDounut(x*size, y*size);
      }
      if (c == color(150, 75, 0)) {
        makeGoomba(x*size, y*size);
      }
      if (c == color(255,255,0)){
        makeQblock(x*size, y*size);
      }
    }
  }
  makePlayer();
}

void draw() {
  //println("frame");
  if (leftDown) {
    if (grounded) {
      if (icy) {
        player.adjustVelocity(-21, 0);
      } else {
        if (player.getVelocityX() > -10) {
          player.adjustVelocity(-250, 0);
        } else {
          player.adjustVelocity(-53, 0);
        }
      }
    } else {
      player.adjustVelocity(-9, 0);
    }
  }
  if (rightDown) {
    if (grounded) {
      if (icy) {
        player.adjustVelocity(21, 0);
      } else {
        if (player.getVelocityX() < 10) {
          player.adjustVelocity(250, 0);
        } else {
          player.adjustVelocity(53, 0);
        }
      }
    } else {
      player.adjustVelocity(9, 0);
    }
  }

  background(255);
  pushMatrix();

  float tx = -player.getX() + width/2;
  float ty = -player.getY() + height/2;

  translate(tx, ty);
  
  handleGround();
  world.draw();
  world.step();
  handleOddBodies();
  handleEnemies();

  popMatrix();
}

void contactStarted(FContact contact) {
  FBody other;
  if (contact.contains("player")) {
    if (contact.getBody1().getName() == "player") {
      other = contact.getBody2();
    } else {
      other = contact.getBody1();
    }
    if (player.getY() < other.getY()-size/2) {
      if (contact.contains("dounut")) {
        ((DelayBox)other).timeDroping = true;
      }
    }
  }
}

void contactEnded(FContact contact) {
  FBody other;
  if (contact.contains("player")) {
    if (contact.getBody1().getName() == "player") {
      other = contact.getBody2();
    } else {
      other = contact.getBody1();
    }
    if (player.getY() < other.getY()-size/2) {
      if (contact.contains("dounut")) {
        ((DelayBox)other).timeDroping = false;
        ((DelayBox)other).timeLeft = 60;
      }
    }
  }
}

void handleGround() {
  grounded = false;
  icy = false;
  FBody b;
  for (int i = 0; i<player.getContacts().size(); i++){
    if (((FContact)player.getContacts().get(i)).getBody1().getName().equals("player")) {
      b = ((FContact)player.getContacts().get(i)).getBody2();
    } else {
      b = ((FContact)player.getContacts().get(i)).getBody1();
    }
    if (player.getY() < b.getY()-size/2) {
      grounded = true;
      if (b.getName().equals("ice")) {
        icy = true;
      }
      if (b.getName().equals("goomba")) {
        b.setName("DEAD");
      }
    }
    
  }
  
}

void handleOddBodies() {
  for (int i = 0; i<oddBodies.size(); i++) {

    if (oddBodies.get(i) instanceof DelayBox) {
      
      DelayBox b = ((DelayBox)oddBodies.get(i));
      text(b.timeLeft, b.getX()-5, b.getY()+random(-10, 10));
      b.setFill(b.timeLeft * 4);
      if (b.timeDroping){
        b.timeLeft--;
        println("!");
      }
      if (b.timeLeft<0) {
        b.setStatic(false);
        b.adjustVelocity(0,10000);
        println("FALL");
      }
    }
  }
}
void handleEnemies() {
  for (int i = 0; i<enemies.size(); i++) {
    FBox b = enemies.get(i);
    if (b.getName() == "DEAD") {
      b.removeFromWorld();
      b.setPosition(0, 0);
    }
  }
}

void keyPressed() {
  if (key == ' ') {
    if (grounded) {
      player.adjustVelocity(0, -500);
    }
  }
  if (keyCode == RIGHT) {
    rightDown = true;
  }
  if (keyCode == LEFT) {
    leftDown = true;
  }
}

void keyReleased() {
  if (keyCode == RIGHT) {
    rightDown = false;
  }
  if (keyCode == LEFT) {
    leftDown = false;
  }
}