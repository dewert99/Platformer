import fisica.*; //<>//

int INTRO = 0;
int PLAYING = 1;
int PAUSED = 2;
int GAMEOVER = 3;
int mode = INTRO;

int size = 25;

FWorld world;

PImage map;
PImage logo, stone, brick, ice, mario, goomba, dounut, qblock, block;

boolean rightDown, leftDown;

ArrayList<FBody> oddBodies;
ArrayList<FBox> enemies;

boolean grounded = false;
boolean icy = false;

FBox player;

void setup() {
  fullScreen(FX2D);

  logo = loadImage ("logo.PNG");
  map = loadImage ("map6.png");
  stone = loadImage("stone.png");
  brick = loadImage("brick.png");
  ice = loadImage("ice.png");
  mario = loadImage("mario.png");
  goomba = loadImage("Goomba.png");
  qblock = loadImage("qblock.png");
  block = loadImage("block.png");
  dounut = loadImage("dounut.png");

  Fisica.init(this);
  world = new FWorld(0, 0, map.width * size, map.height * size);
  world.setGravity(0, 900);

  oddBodies = new ArrayList<FBody>(100);
  enemies = new ArrayList<FBox>(100);

  rightDown = leftDown = false;
  makeWorld();
}

void draw() {
  background(255);
  pushMatrix();

  float tx = -player.getX() + width/2;
  float ty = -player.getY() + height/2;

  translate(tx, ty);

  if (mode == INTRO) {
    Intro();
  } else if (mode == PLAYING) {
    Playing();
  } else if (mode == PAUSED) {
    Paused();
  } else if (mode == GAMEOVER) {
    GameOver();
  } else {
    popMatrix();
    background(255, 0, 0);
  }
}

void Intro() {
  world.draw();
  popMatrix();
  imageMode(CENTER);
  image(logo,width/2,height/2);
  imageMode(CORNER);
}

void Playing() {
  //println("frame");
  if (leftDown) {
    if (grounded) {
      if (icy) {
        player.adjustVelocity(-21, 0);
      } else {
        if (player.getVelocityX() > -10) {
          player.adjustVelocity(-250, 0);
        } else {
          player.adjustVelocity(-53, 0);
        }
      }
    } else {
      player.adjustVelocity(-9, 0);
    }
  }
  if (rightDown) {
    if (grounded) {
      if (icy) {
        player.adjustVelocity(21, 0);
      } else {
        if (player.getVelocityX() < 10) {
          player.adjustVelocity(250, 0);
        } else {
          player.adjustVelocity(53, 0);
        }
      }
    } else {
      player.adjustVelocity(9, 0);
    }
  }

  handleGround();
  world.draw();
  world.step();
  handleOddBodies();
  handleEnemies();

  popMatrix();
}

void Paused() {
  world.draw();
  popMatrix();
  fill(0,100);
  rect(0,0,width,height);
  fill(255);
  textSize(50);
  text("PAUSED", width/2, height/2);
}
void GameOver() {
  world.draw();
  popMatrix();
  fill(0,100);
  rect(0,0,width,height);
  fill(255, 0, 0);
  text("GAMEOVER", width/2, height/2);
}

void contactStarted(FContact contact) {
  FBody other;
  if (contact.contains("player")) {
    if (contact.getBody1().getName() == "player") {
      other = contact.getBody2();
    } else {
      other = contact.getBody1();
    }
    if (contact.contains("goomba") && player.getY() > other.getY()-size/2){
      mode = GAMEOVER;
    }
    if (contact.contains("block") && player.getY() > other.getY()+size/2){
      other.setName("block");
      qblock.resize(round(size), round(size));
      other.attachImage(block);
    }
    if (player.getY() < other.getY()-size/2) {
      if (contact.contains("dounut")) {
        ((DelayBox)other).timeDroping = true;
      }
    }
  }
}

void contactEnded(FContact contact) {
  FBody other;
  if (contact.contains("player")) {
    if (contact.getBody1().getName() == "player") {
      other = contact.getBody2();
    } else {
      other = contact.getBody1();
    }
    if (player.getY() < other.getY()-size/2) {
      if (contact.contains("dounut")) {
        ((DelayBox)other).timeDroping = false;
        ((DelayBox)other).timeLeft = 60;
      }
    }
  }
}

void handleGround() {
  grounded = false;
  icy = false;
  FBody b;
  for (int i = 0; i<player.getContacts().size(); i++) {
    if (((FContact)player.getContacts().get(i)).getBody1().getName().equals("player")) {
      b = ((FContact)player.getContacts().get(i)).getBody2();
    } else {
      b = ((FContact)player.getContacts().get(i)).getBody1();
    }
    if (player.getY() < b.getY()-size/2) {
      grounded = true;
      if (b.getName().equals("ice")) {
        icy = true;
      }
      if (b.getName().equals("goomba")) {
        b.removeFromWorld();
        b.setPosition(0, 0);
        print("remove");
      }
    }
  }
}

void handleOddBodies() {
  for (int i = 0; i<oddBodies.size(); i++) {

    if (oddBodies.get(i) instanceof DelayBox) {

      DelayBox b = ((DelayBox)oddBodies.get(i));
      b.setFill(b.timeLeft * 4);
      if (b.timeDroping) {
        b.timeLeft--;
      }
      if (b.timeLeft<0) {
        b.setStatic(false);
        b.adjustVelocity(0, 100);
      }
    }
  }
}
void handleEnemies() {
  /*for (int i = 0; i<enemies.size(); i++) {
    FBox b = enemies.get(i);
    if (b.getName() == "DEAD") {
      b.removeFromWorld();
      b.setPosition(0, 0);
    }
  }*/
}

void keyPressed() {
  if (key == ' ') {
    if (grounded) {
      player.adjustVelocity(0, -500);
    }
  }
  if (keyCode == RIGHT) {
    rightDown = true;
  }
  if (keyCode == LEFT) {
    leftDown = true;
  }
}

void keyReleased() {
  if (keyCode == RIGHT) {
    rightDown = false;
  }
  if (keyCode == LEFT) {
    leftDown = false;
  }
}

void mouseReleased() {
  if (mode == PLAYING) {
    mode = PAUSED;
  } else if (mode == PAUSED) {
    mode = PLAYING;
  } else {
    world.clear();
    makeWorld();
    mode = PLAYING;
  }
}